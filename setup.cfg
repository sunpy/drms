[metadata]
name = drms
provides = drms
description = Access HMI, AIA and MDI data with Python from the Standford JSOC DRMS
long_description = file: README.rst
long_description_content_type = text/x-rst
author = The SunPy Community
author_email = sunpy@googlegroups.com
license = BSD 2-Clause
license_files = LICENSE.rst
url = https://sunpy.org
edit_on_github = True
github_project = sunpy/drms
platform = any
keywords = solar physics, solar, science, data
classifiers =
  Development Status :: 5 - Production/Stable
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Natural Language :: English
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: 3.11
  Topic :: Scientific/Engineering :: Astronomy
  Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
python_requires = >=3.8
packages = find:
include_package_data = True
setup_requires =
  setuptools_scm
install_requires=
  numpy
  pandas

[options.extras_require]
tests =
  pytest-astropy
  tox
docs =
  astropy
  matplotlib
  sphinx
  sphinx-automodapi
  sphinx-gallery
  sphinx-changelog
  sunpy-sphinx-theme
  # Not a direct dependency, but we need to pin this until sphinx-changelog is updated (see #6668)
  towncrier<22.12.0

[options.packages.find]
exclude = drms._dev

[options.entry_points]
console_scripts =
    drms = drms.main:main

[tool:pytest]
testpaths = "drms" "docs"
norecursedirs = ".tox" "build" "docs[\/]_build" "docs[\/]generated" "*.egg-info" "examples" ".history" "paper" "drms[\/]_dev"
doctest_plus = enabled
doctest_optionflags = NORMALIZE_WHITESPACE FLOAT_CMP ELLIPSIS
addopts = --doctest-rst -p no:unraisableexception -p no:threadexception
markers =
    remote_data: marks this test function as needing remote data.
    jsoc: marks the test function as needing a connection to JSOC.
    kis: marks the test function as needing a connection to KIS.
    export: marks the test function as needing a JSOC registered email address.
    xdist_group: sunpy thing
    flaky: sunpy thing
remote_data_strict = True
junit_family=xunit2
filterwarnings =
    error
    # Do not fail on pytest config issues (i.e. missing plugins) but do show them
    always::pytest.PytestConfigWarning
    # This is due to dependencies building with a numpy version different from
    # the local installed numpy version, but should be fine
    # See https://github.com/numpy/numpy/issues/15748#issuecomment-598584838
    ignore:numpy.ufunc size changed:RuntimeWarning
    ignore:numpy.ndarray size changed:RuntimeWarning
    # https://github.com/pytest-dev/pytest-cov/issues/557
    ignore:The --rsyncdir command line argument and rsyncdirs config variable are deprecated.:DeprecationWarning

[pycodestyle]
max_line_length = 110

[flake8]
max-line-length = 110
exclude =
    .git,
    __pycache__,
    docs/conf.py,
    build,
rst-directives =
    plot

[isort]
balanced_wrapping = True
skip=docs/conf.py
default_section = THIRDPARTY
include_trailing_comma = True
known_astropy = astropy, asdf, sunpy
known_first_party = drms
length_sort = False
length_sort_sections=stdlib
line_length = 110
multi_line_output = 3
no_lines_before = LOCALFOLDER
sections = STDLIB, THIRDPARTY, ASTROPY, FIRSTPARTY, LOCALFOLDER

[coverage:run]
omit =
  */drms/__init__*
  */drms/_dev/*
  */drms/*/tests/*
  */drms/*setup*
  */drms/conftest.py
  */drms/cython_version*
  */drms/data/_sample.py
  */drms/data/sample.py
  */drms/extern/*
  */drms/version*
  drms/__init__*
  drms/_dev/*
  drms/*/tests/*
  drms/*setup*
  drms/conftest.py
  drms/cython_version*
  drms/data/_sample.py
  drms/data/sample.py
  drms/extern/*
  drms/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
